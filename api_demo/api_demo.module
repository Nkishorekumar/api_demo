<?php

/**
 *
 * @param type $form
 * @param type $form_state
 * @param type $form_id
 * Implements hook_form_FORM_ID_alter
 */
function api_demo_form_system_site_information_settings_alter(&$form, &$form_state, $form_id) {
  $siteapikey = variable_get('siteapikey', 'No API Key yet');
  $form['site_information']['siteapikey'] = array(
    '#type' => 'textfield',
    '#title' => t('Site API Key'),
    '#default_value' => $siteapikey,
    '#required' => TRUE
  );
  if ($siteapikey != 'No API Key yet') {
    $form['actions']['submit']['#value'] = 'Update Configuration';
  }
  array_unshift($form['#submit'], 'api_demo_key_submit');
  array_unshift($form['#validate'], 'api_demo_key_validate');
}

/**
 *
 * @param type $form
 * @param type $form_state
 * Validate the form field
 */
function api_demo_key_validate($form, &$form_state) {
  $siteapikey = variable_get('siteapikey', 'No API Key yet');
  if ($form_state['values']['siteapikey'] != $siteapikey) {
    if (preg_match('/\s/', $form_state['values']['siteapikey'])) {
      form_set_error('siteapikey', 'Spaces can not be part of Site API Key');
    }
  }
}

/**
 *
 * @param type $form
 * @param type $form_state
 * Form submit
 */
function api_demo_key_submit($form, &$form_state) {
  $siteapikey = variable_get('siteapikey', 'No API Key yet');
  if ($form_state['values']['siteapikey'] != $siteapikey) {
    drupal_set_message('The Site API Key has been saved with "' . $form_state['values']['siteapikey'] . '"');
  }
  else {
    drupal_set_message('The Site API Key has not been updated');
  }
}

/**
 *
 * @return string
 * Implements Hook_menu
 */
function api_demo_menu() {
  $items['page_json/%/%'] = array(
    'title' => t('Page Json Data'),
    'description' => t('Return Json Data for node of content type "Page"'),
    'page callback' => 'get_page_json',
    'page arguments' => array(1, 2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 *
 * @param type $site_api_key
 * @param type $page_nid
 * Page Callback
 */
function get_page_json($site_api_key, $page_nid) {
  $original_siteapikey = variable_get('siteapikey', 'No API Key yet');
  if ($original_siteapikey == $site_api_key) {
    if (_get_node_type_from_node_id($page_nid) == 'page') {
      $node = node_load($page_nid);
      drupal_json_output($node);
      exit();
    }
  }
  drupal_json_output('Access Denied');
  exit();
}

/**
 * Helper function to get type of node
 */
function _get_node_type_from_node_id($nid) {
  $query = db_select('node', 'n');
  $query->fields('n', array('type'));
  $query->condition('n.nid', $nid);
  return $query->execute()->fetchField();
}
